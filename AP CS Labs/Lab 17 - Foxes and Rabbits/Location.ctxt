#BlueJ class context
comment0.params=row\ col
comment0.target=Location(int,\ int)
comment0.text=\r\n\ Represent\ a\ row\ and\ column.\r\n\ @param\ row\ The\ row.\r\n\ @param\ col\ The\ column.\r\n
comment1.params=
comment1.target=java.lang.String\ toString()
comment1.text=\r\n\ Return\ a\ string\ with\ row\ and\ col\r\n\ @return\ <code>row,\ col</code>\r\n
comment2.params=obj
comment2.target=boolean\ equals(java.lang.Object)
comment2.text=\r\n\ Check\ if\ two\ objects\ are\ equal\r\n\ @param\ Object\ to\ be\ compared\r\n\ @return\ if\ <code>row</code>\ and\ <code>col</code>\ of\ both\ objects\ match\r\n
comment3.params=
comment3.target=int\ getRow()
comment4.params=
comment4.target=int\ getCol()
comment5.params=
comment5.target=int\ hashCode()
comment5.text=\r\n\ Use\ the\ top\ 16\ bits\ for\ the\ row\ value\ and\ the\ bottom\ for\r\n\ the\ column.\ Except\ for\ very\ big\ grids,\ this\ should\ give\ a\r\n\ unique\ hash\ code\ for\ each\ (row,\ col)\ pair.\r\n\ @return\ A\ hashcode\ for\ the\ location.\r\n
numComments=6
