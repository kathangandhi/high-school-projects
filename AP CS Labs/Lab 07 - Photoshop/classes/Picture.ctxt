#BlueJ class context
comment0.params=
comment0.target=Picture()
comment0.text=\r\n\ Constructor\ that\ takes\ no\ arguments\r\n
comment1.params=fileName
comment1.target=Picture(java.lang.String)
comment1.text=\r\n\ Constructor\ that\ takes\ a\ file\ name\ and\ creates\ the\ picture\r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ create\ the\ picture\ from\r\n
comment10.params=
comment10.target=void\ grayscale()
comment10.text=makes\ it\ monochromatic
comment11.params=redCoeff\ greenCoeff\ blueCoeff
comment11.target=void\ tint(double,\ double,\ double)
comment11.text=\r\n\ intensifies\ current\ RGB\ values\ based\ on\ provided\ coefficients\r\n\ @param\ redCoeff\ the\ coefficient\ for\ the\ red\ \r\n\ @param\ greenCoeff\ the\ coefficient\ for\ the\ green\r\n\ @param\ blueCoeff\ the\ coefficient\ for\ the\ blue\r\n
comment12.params=
comment12.target=void\ showFish()
comment12.text=finds\ fish\ in\ pools
comment13.params=
comment13.target=void\ mirrorVertical()
comment13.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ left\ to\ right\ \r\n
comment14.params=rowLimit
comment14.target=void\ mirrorVertical(int)
comment14.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ left\ to\ right\ \r\n
comment15.params=
comment15.target=void\ mirrorVerticalRightToLeft()
comment15.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ vertical\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ right\ to\ left\ \r\n
comment16.params=
comment16.target=void\ mirrorHorizontal()
comment16.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ horizontal\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ up\ to\ down\ \r\n
comment17.params=
comment17.target=void\ verticalFlip()
comment17.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ horizontal\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ up\ to\ down\ \r\n
comment18.params=
comment18.target=void\ mirrorHorizontalBottomToTop()
comment18.text=\ \r\n\ mirrors\ the\ picture\ around\ a\r\n\ horizontal\ mirror\ in\ the\ center\ of\ the\ picture\r\n\ from\ up\ to\ down\ \r\n
comment19.params=
comment19.target=void\ mirrorArms()
comment19.text=mirrors\ the\ arms\ of\ the\ snowman
comment2.params=height\ width
comment2.target=Picture(int,\ int)
comment2.text=\r\n\ Constructor\ that\ takes\ the\ width\ and\ height\r\n\ @param\ height\ the\ height\ of\ the\ desired\ picture\r\n\ @param\ width\ the\ width\ of\ the\ desired\ picture\r\n
comment20.params=
comment20.target=void\ mirrorGull()
comment20.text=mirrors\ the\ gull
comment21.params=param
comment21.target=void\ edgeDetection(int)
comment21.text=\ \r\n\ detects\ edges\ in\ the\ \r\n\ image\ based\ on\ what\ color\ difference\ \r\n\ is\ considered\ an\ edge(provided\ by\ user)\r\n
comment22.params=from\ rowStart\ colStart
comment22.target=void\ copy(Picture,\ int,\ int)
comment22.text=\ \r\n\ copy\ from\ the\ passed\ from\ to\ the\ specified\ rowStart\ and\ colStart\ \r\n\ in\ the\ current\ picture\r\n\ @param\ from\ the\ picture\ to\ copy\ from\r\n\ @param\ rowStart\ the\ start\ row\ to\ copy\ to\r\n\ @param\ colStart\ the\ start\ col\ to\ copy\ to\r\n
comment23.params=span
comment23.target=void\ posterize(int)
comment23.text=make\ it\ poster-like\ with\ high\ contrast\ pixel\ colors
comment24.params=from\ ref\ dist
comment24.target=void\ chromakey(Picture,\ java.awt.Color,\ int)
comment24.text=selectively\ swap\ pixels\ with\ close\ color\ values\ between\ two\ Pictures\ w
comment25.params=msg
comment25.target=void\ encode(Picture)
comment25.text=\r\n\ encodes\ a\ steganographic\ picture\r\n
comment26.params=
comment26.target=Picture\ decode()
comment26.text=\r\n\ decodes\ a\ steganographic\ picture\r\n
comment27.params=
comment27.target=Picture\ simpleBlur()
comment27.text=\r\n\ Blurs\ the\ image\ by\ averaging\ the\ neighboring\ pixels'\ value\ \r\n\ to\ determine\ the\ pixel's\ color\ value\r\n
comment3.params=copyPicture
comment3.target=Picture(Picture)
comment3.text=\r\n\ Constructor\ that\ takes\ a\ picture\ and\ creates\ a\r\n\ copy\ of\ that\ picture\r\n\ @param\ copyPicture\ the\ picture\ to\ copy\r\n
comment4.params=image
comment4.target=Picture(java.awt.image.BufferedImage)
comment4.text=\r\n\ Constructor\ that\ takes\ a\ buffered\ image\r\n\ @param\ image\ the\ buffered\ image\ to\ use\r\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\r\n\ Method\ to\ return\ a\ string\ with\ information\ about\ this\ picture.\r\n\ @return\ a\ string\ with\ information\ about\ the\ picture\ such\ as\ fileName,\r\n\ height\ and\ width.\r\n
comment6.params=
comment6.target=void\ zeroBlue()
comment6.text=sets\ the\ blue\ to\ 0
comment7.params=
comment7.target=void\ keepOnlyBlue()
comment7.text=keeps\ the\ blue\ only
comment8.params=
comment8.target=void\ negate()
comment8.text=inverts\ colors
comment9.params=threshold
comment9.target=void\ solarize(int)
comment9.text=\ \r\n\ inverts\ colors\ if\ intensity\ of\ any\ color\ is\ less\ than\ the\ threshold\r\n\ @param\ threshold\ the\ setpoint\ to\ decide\ inversion\ of\ colors\r\n
numComments=28
